#############################################################################
# Makefile for building: myTarget.app/Contents/MacOS/myTarget
# Generated by qmake (2.01a) (Qt 4.8.7) on: Mon Oct 17 17:30:47 2016
# Project:  DylanDog.pro
# Template: app
# Command: /usr/local/bin/qmake -o Makefile DylanDog.pro
#############################################################################

####### Compiler, tools and options

CC            = clang
CXX           = clang++
DEFINES       = -DQT_NO_DEBUG -DQT_SQL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -mmacosx-version-min=10.7 -O2 -arch x86_64 -Wall -W $(DEFINES)
CXXFLAGS      = -pipe -stdlib=libc++ -mmacosx-version-min=10.7 -O2 -arch x86_64 -Wall -W $(DEFINES)
INCPATH       = -I/usr/local/Cellar/qt/4.8.7/mkspecs/unsupported/macx-clang-libc++ -I. -I/usr/local/Cellar/qt/4.8.7/lib/QtCore.framework/Versions/4/Headers -I/usr/local/Cellar/qt/4.8.7/lib/QtCore.framework/Versions/4/Headers -I/usr/local/Cellar/qt/4.8.7/lib/QtGui.framework/Versions/4/Headers -I/usr/local/Cellar/qt/4.8.7/lib/QtGui.framework/Versions/4/Headers -I/usr/local/Cellar/qt/4.8.7/lib/QtSql.framework/Versions/4/Headers -I/usr/local/Cellar/qt/4.8.7/lib/QtSql.framework/Versions/4/Headers -I/usr/local/Cellar/qt/4.8.7/include -I. -I. -F/usr/local/Cellar/qt/4.8.7/lib
LINK          = clang++
LFLAGS        = -headerpad_max_install_names -stdlib=libc++ -mmacosx-version-min=10.7 -arch x86_64
LIBS          = $(SUBLIBS) -F/usr/local/Cellar/qt/4.8.7/lib -L/usr/local/Cellar/qt/4.8.7/lib -framework QtSql -L/usr/local/Cellar/qt/4.8.7/lib -F/usr/local/Cellar/qt/4.8.7/lib -framework QtCore -framework QtGui 
AR            = ar cq
RANLIB        = ranlib -s
QMAKE         = /usr/local/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = cp -f
COPY_DIR      = cp -f -R
STRIP         = 
INSTALL_FILE  = $(COPY_FILE)
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = $(COPY_FILE)
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p
export MACOSX_DEPLOYMENT_TARGET = 10.7

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = authordd.cpp \
		dbinterface.cpp \
		illustrator.cpp \
		main.cpp \
		mainwindow.cpp \
		person.cpp \
		persondb.cpp 
OBJECTS       = authordd.o \
		dbinterface.o \
		illustrator.o \
		main.o \
		mainwindow.o \
		person.o \
		persondb.o
DIST          = /usr/local/Cellar/qt/4.8.7/mkspecs/common/unix.conf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/common/mac.conf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/common/gcc-base.conf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/common/gcc-base-macx.conf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/common/clang.conf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/qconfig.pri \
		/usr/local/Cellar/qt/4.8.7/mkspecs/modules/qt_webkit_version.pri \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/qt_functions.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/qt_config.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/exclusive_builds.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/default_pre.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/mac/default_pre.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/release.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/default_post.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/mac/default_post.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/mac/x86_64.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/mac/objective_c.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/shared.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/warn_on.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/qt.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/unix/thread.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/moc.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/mac/rez.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/mac/sdk.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/resources.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/uic.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/yacc.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/lex.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/include_source_dir.prf \
		DylanDog.pro
QMAKE_TARGET  = myTarget
DESTDIR       = 
TARGET        = myTarget.app/Contents/MacOS/myTarget

####### Custom Compiler Variables
QMAKE_COMP_QMAKE_OBJECTIVE_CFLAGS = -pipe \
		-O2 \
		-arch \
		x86_64 \
		-Wall \
		-W


first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile myTarget.app/Contents/PkgInfo myTarget.app/Contents/Resources/empty.lproj myTarget.app/Contents/Info.plist $(TARGET)

$(TARGET):  $(OBJECTS)  
	@$(CHK_DIR_EXISTS) myTarget.app/Contents/MacOS/ || $(MKDIR) myTarget.app/Contents/MacOS/ 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: DylanDog.pro  /usr/local/Cellar/qt/4.8.7/mkspecs/unsupported/macx-clang-libc++/qmake.conf /usr/local/Cellar/qt/4.8.7/mkspecs/common/unix.conf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/common/mac.conf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/common/gcc-base.conf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/common/gcc-base-macx.conf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/common/clang.conf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/qconfig.pri \
		/usr/local/Cellar/qt/4.8.7/mkspecs/modules/qt_webkit_version.pri \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/qt_functions.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/qt_config.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/exclusive_builds.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/default_pre.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/mac/default_pre.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/release.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/default_post.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/mac/default_post.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/mac/x86_64.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/mac/objective_c.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/shared.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/warn_on.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/qt.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/unix/thread.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/moc.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/mac/rez.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/mac/sdk.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/resources.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/uic.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/yacc.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/lex.prf \
		/usr/local/Cellar/qt/4.8.7/mkspecs/features/include_source_dir.prf \
		/usr/local/Cellar/qt/4.8.7/lib/QtSql.framework/QtSql.prl \
		/usr/local/Cellar/qt/4.8.7/lib/QtCore.framework/QtCore.prl \
		/usr/local/Cellar/qt/4.8.7/lib/QtGui.framework/QtGui.prl
	$(QMAKE) -o Makefile DylanDog.pro
/usr/local/Cellar/qt/4.8.7/mkspecs/common/unix.conf:
/usr/local/Cellar/qt/4.8.7/mkspecs/common/mac.conf:
/usr/local/Cellar/qt/4.8.7/mkspecs/common/gcc-base.conf:
/usr/local/Cellar/qt/4.8.7/mkspecs/common/gcc-base-macx.conf:
/usr/local/Cellar/qt/4.8.7/mkspecs/common/clang.conf:
/usr/local/Cellar/qt/4.8.7/mkspecs/qconfig.pri:
/usr/local/Cellar/qt/4.8.7/mkspecs/modules/qt_webkit_version.pri:
/usr/local/Cellar/qt/4.8.7/mkspecs/features/qt_functions.prf:
/usr/local/Cellar/qt/4.8.7/mkspecs/features/qt_config.prf:
/usr/local/Cellar/qt/4.8.7/mkspecs/features/exclusive_builds.prf:
/usr/local/Cellar/qt/4.8.7/mkspecs/features/default_pre.prf:
/usr/local/Cellar/qt/4.8.7/mkspecs/features/mac/default_pre.prf:
/usr/local/Cellar/qt/4.8.7/mkspecs/features/release.prf:
/usr/local/Cellar/qt/4.8.7/mkspecs/features/default_post.prf:
/usr/local/Cellar/qt/4.8.7/mkspecs/features/mac/default_post.prf:
/usr/local/Cellar/qt/4.8.7/mkspecs/features/mac/x86_64.prf:
/usr/local/Cellar/qt/4.8.7/mkspecs/features/mac/objective_c.prf:
/usr/local/Cellar/qt/4.8.7/mkspecs/features/shared.prf:
/usr/local/Cellar/qt/4.8.7/mkspecs/features/warn_on.prf:
/usr/local/Cellar/qt/4.8.7/mkspecs/features/qt.prf:
/usr/local/Cellar/qt/4.8.7/mkspecs/features/unix/thread.prf:
/usr/local/Cellar/qt/4.8.7/mkspecs/features/moc.prf:
/usr/local/Cellar/qt/4.8.7/mkspecs/features/mac/rez.prf:
/usr/local/Cellar/qt/4.8.7/mkspecs/features/mac/sdk.prf:
/usr/local/Cellar/qt/4.8.7/mkspecs/features/resources.prf:
/usr/local/Cellar/qt/4.8.7/mkspecs/features/uic.prf:
/usr/local/Cellar/qt/4.8.7/mkspecs/features/yacc.prf:
/usr/local/Cellar/qt/4.8.7/mkspecs/features/lex.prf:
/usr/local/Cellar/qt/4.8.7/mkspecs/features/include_source_dir.prf:
/usr/local/Cellar/qt/4.8.7/lib/QtSql.framework/QtSql.prl:
/usr/local/Cellar/qt/4.8.7/lib/QtCore.framework/QtCore.prl:
/usr/local/Cellar/qt/4.8.7/lib/QtGui.framework/QtGui.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile DylanDog.pro

myTarget.app/Contents/PkgInfo: 
	@$(CHK_DIR_EXISTS) myTarget.app/Contents || $(MKDIR) myTarget.app/Contents 
	@$(DEL_FILE) myTarget.app/Contents/PkgInfo
	@echo "APPL????" >myTarget.app/Contents/PkgInfo
myTarget.app/Contents/Resources/empty.lproj: 
	@$(CHK_DIR_EXISTS) myTarget.app/Contents/Resources || $(MKDIR) myTarget.app/Contents/Resources 
	@touch myTarget.app/Contents/Resources/empty.lproj
	
myTarget.app/Contents/Info.plist: 
	@$(CHK_DIR_EXISTS) myTarget.app/Contents || $(MKDIR) myTarget.app/Contents 
	@$(DEL_FILE) myTarget.app/Contents/Info.plist
	@sed -e "s,@SHORT_VERSION@,1.0,g" -e "s,@TYPEINFO@,????,g" -e "s,@ICON@,,g" -e "s,@EXECUTABLE@,myTarget,g" -e "s,@TYPEINFO@,????,g" /usr/local/Cellar/qt/4.8.7/mkspecs/unsupported/macx-clang-libc++/Info.plist.app >myTarget.app/Contents/Info.plist
dist: 
	@$(CHK_DIR_EXISTS) .tmp/myTarget1.0.0 || $(MKDIR) .tmp/myTarget1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/myTarget1.0.0/ && $(COPY_FILE) --parents authordd.cpp dbinterface.cpp illustrator.cpp main.cpp mainwindow.cpp person.cpp persondb.cpp .tmp/myTarget1.0.0/ && (cd `dirname .tmp/myTarget1.0.0` && $(TAR) myTarget1.0.0.tar myTarget1.0.0 && $(COMPRESS) myTarget1.0.0.tar) && $(MOVE) `dirname .tmp/myTarget1.0.0`/myTarget1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/myTarget1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) -r myTarget.app
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_objective_c_make_all:
compiler_objective_c_clean:
compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_rez_source_make_all:
compiler_rez_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

authordd.o: authordd.cpp authordd.h \
		persondb.h \
		person.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o authordd.o authordd.cpp

dbinterface.o: dbinterface.cpp dbinterface.h \
		common.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o dbinterface.o dbinterface.cpp

illustrator.o: illustrator.cpp illustrator.h \
		persondb.h \
		person.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o illustrator.o illustrator.cpp

main.o: main.cpp mainwindow.h \
		dbinterface.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: mainwindow.cpp mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

person.o: person.cpp person.h \
		common.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o person.o person.cpp

persondb.o: persondb.cpp persondb.h \
		person.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o persondb.o persondb.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

